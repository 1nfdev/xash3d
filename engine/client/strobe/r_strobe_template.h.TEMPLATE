/*
r_strobe_template.h - Software based strobing implementation

Copyright (C) 2018 - fuzun * github/fuzun

For information:
	https://forums.blurbusters.com/viewtopic.php?f=7&t=3815&p=30401

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

See the GNU General Public License for more details.
*/

#if !defined R_STROBE_TEMPLATE_H && !defined STROBE_DISABLED
#define R_STROBE_TEMPLATE_H

#include "r_strobe_api.h"

#define STROBE_TEMPLATE STROBE_IMPL(TEMPLATE)

typedef struct STROBE_IMPL_STRUCT_S( STROBE_TEMPLATE ) STROBE_IMPL_STRUCT_T(STROBE_TEMPLATE);
typedef struct STROBE_IMPL_PRIVATE_S( STROBE_TEMPLATE ) STROBE_IMPL_PRIVATE_T(STROBE_TEMPLATE);

typedef struct STROBE_IMPL_STRUCT_S(STROBE_TEMPLATE)
{
	StrobeAPI_t base;
	STROBE_IMPL_PRIVATE_T(STROBE_TEMPLATE) *private;
	void ( *STROBE_IMPL_FUNC_MAIN)(STROBE_IMPL_THIS_PARAM(STROBE_TEMPLATE));
	void ( *STROBE_IMPL_FUNC_DEBUGHANDLER)(STROBE_IMPL_THIS_PARAM(STROBE_TEMPLATE));
} STROBE_IMPL_STRUCT_T(STROBE_TEMPLATE);
extern STROBE_IMPL_STRUCT_T(STROBE_TEMPLATE) *STROBE_TEMPLATE;

void STROBE_IMPL_EXPORTEDFUNC_constructor(STROBE_TEMPLATE)( void **STROBE_TEMPLATE );
void STROBE_IMPL_EXPORTEDFUNC_destructor(STROBE_TEMPLATE)( void **STROBE_TEMPLATE );
void STROBE_IMPL_EXPORTEDFUNC_reinit(STROBE_TEMPLATE)( void **STROBE_TEMPLATE );
void STROBE_IMPL_EXPORTEDFUNC_main(STROBE_TEMPLATE)( void **STROBE_TEMPLATE );

#endif